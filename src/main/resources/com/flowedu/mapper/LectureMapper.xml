<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.flowedu.mapper.LectureMapper">

	<select id="getLectureRoomList" resultType="com.flowedu.dto.LectureRoomDto">
		SELECT A.lecture_room_id, A.office_id, A.lecture_room_name, B.office_name
		FROM LECTURE_ROOM_INFO A LEFT JOIN OFFICE B
		ON A.office_id = B.office_id
		<if test="officeId > 0">
			<where>
				A.office_id = #{officeId}
			</where>
		</if>
	</select>

	<select id="getLectureRoomCount" resultType="Integer">
		SELECT count(lecture_room_id)
		FROM LECTURE_ROOM_INFO
		WHERE office_id = #{officeId}
		AND lecture_room_name = #{lectureRoomName}
	</select>

	<select id="getLecturePriceList" resultType="com.flowedu.dto.LecturePriceDto">
		SELECT lecture_price_id, lecture_price FROM LECTURE_PRICE ORDER BY lecture_price ASC
	</select>

	<select id="getLecturePriceCount" parameterType="Integer" resultType="Integer">
		SELECT count(lecture_price_id)
		FROM LECTURE_PRICE
		WHERE lecture_price = #{lecturePrice}
	</select>

	<select id="getLectureInfoList" resultType="com.flowedu.dto.LectureInfoDto">
		SELECT F.academy_group_name, A.lecture_id, D.office_name, A.lecture_name, A.school_type, A.lecture_grade, B.member_name, A.lecture_status, A.lecture_limit_student,
				(SELECT count(lecture_rel_id) FROM LECTURE_STUDENT_REL WHERE lecture_id = A.lecture_id AND add_yn = true) as reg_count
		FROM LECTURE_INFO A LEFT JOIN FLOWEDU_MEMBER B
		ON A.charge_member_id = B.flow_member_id LEFT JOIN FLOWEDU_MEMBER C
		ON A.manage_member_id = C.flow_member_id LEFT JOIN OFFICE D
		ON A.office_id = D.office_id LEFT JOIN LECTURE_PRICE E
		ON A.lecture_price_id = E.lecture_price_id LEFT JOIN ACADEMY_GROUP F
		ON D.academy_group_id = F.academy_group_id
		WHERE 1=1
		<if test="academyGroupId > 0">
			AND F.academy_group_id = #{academyGroupId}
		</if>
		<if test="officeId > 0">
			AND A.office_id = #{officeId}
		</if>
		<if test="schoolType != ''">
			AND A.school_type = #{schoolType}
		</if>
		<if test="lectureGrade > 0">
			AND A.lecture_grade = #{lectureGrade}
		</if>
		<if test="lectureSubject != ''">
			AND A.lecture_subject = #{lectureSubject}
		</if>
		<if test="lectureStatus != ''">
			AND A.lecture_status = #{lectureStatus}
		</if>
		<if test="searchType != ''">
			<if test="searchValue != ''">
				AND A.lecture_name LIKE CONCAT ('%', #{searchValue}, '%')
			</if>
		</if>
		LIMIT #{start}, #{end}
	</select>

	<select id="getLectureInfoCount" resultType="Integer">
        SELECT count(A.lecture_id) FROM LECTURE_INFO A LEFT JOIN FLOWEDU_MEMBER B
        ON A.charge_member_id = B.flow_member_id LEFT JOIN FLOWEDU_MEMBER C
        ON A.manage_member_id = C.flow_member_id LEFT JOIN OFFICE D
        ON A.office_id = D.office_id LEFT JOIN LECTURE_PRICE E
        ON A.lecture_price_id = E.lecture_price_id LEFT JOIN ACADEMY_GROUP F
        ON D.academy_group_id = F.academy_group_id
        WHERE 1=1
        <if test="academyGroupId > 0">
            AND F.academy_group_id = #{academyGroupId}
        </if>
        <if test="officeId > 0">
            AND A.office_id = #{officeId}
        </if>
        <if test="schoolType != ''">
            AND A.school_type = #{schoolType}
        </if>
        <if test="lectureGrade > 0">
            AND A.lecture_grade = #{lectureGrade}
        </if>
        <if test="lectureSubject != ''">
            AND A.lecture_subject = #{lectureSubject}
        </if>
        <if test="lectureStatus != ''">
            AND A.lecture_status = #{lectureStatus}
        </if>
        <if test="searchType != ''">
            <if test="searchValue != ''">
                AND A.lecture_name LIKE CONCAT ('%', #{searchValue}, '%')
            </if>
        </if>
	</select>

	<select id="getLectureDetailInfoList" parameterType="Long" resultType="com.flowedu.dto.LectureDetailDto">
		SELECT A.*, B.office_id, B.lecture_room_name, C.office_name
		FROM LECTURE_DETAIL_INFO A LEFT JOIN LECTURE_ROOM_INFO B
		ON A.lecture_room_id = B.lecture_room_id LEFT JOIN OFFICE C
		ON B.office_id = C.office_id
		<if test="lectureId > 0">
			<where>A.lecture_id = #{lectureId}</where>
		</if>
	</select>

	<select id="getLectureInfo" resultType="com.flowedu.dto.LectureInfoDto">
		SELECT A.*, B.member_name as charge_member_name, C.member_name as manage_member_name,
		D.office_name, E.lecture_price,
		(SELECT count(lecture_rel_id) FROM LECTURE_STUDENT_REL WHERE lecture_id = A.lecture_id AND add_yn = 1) as reg_count
		FROM LECTURE_INFO A LEFT JOIN FLOWEDU_MEMBER B
		ON A.charge_member_id = B.flow_member_id LEFT JOIN FLOWEDU_MEMBER C
		ON A.manage_member_id = C.flow_member_id LEFT JOIN OFFICE D
		ON A.office_id = D.office_id LEFT JOIN LECTURE_PRICE E
		ON A.lecture_price_id = E.lecture_price_id
		WHERE A.lecture_id = #{lectureId}
	</select>

	<select id="getLectureDetailCountByTime" resultType="Integer">
		SELECT count(*) FROM LECTURE_DETAIL_INFO
		WHERE lecture_room_id = #{lectureRoomId}
		AND lecture_day = #{lectureDay}
		<![CDATA[
		AND TIME_TO_SEC(TIME(start_time)) < TIME_TO_SEC(TIME(#{endTime}))
		]]>
		AND TIME_TO_SEC(TIME(end_time)) > TIME_TO_SEC(TIME(#{startTime}))
	</select>

	<select id="getRegisteredLectureStudentCount" resultType="Integer">
		SELECT count(lecture_rel_id)
		FROM LECTURE_STUDENT_REL
		WHERE lecture_id = #{lectureId} AND add_yn = 1
	</select>


	<select id="getStudentListByLectureRegister" resultType="com.flowedu.dto.LectureStudentRelDto">
		SELECT A.*, B.student_name, B.school_name
		FROM LECTURE_STUDENT_REL A LEFT JOIN STUDENT B
		ON A.student_id = B.student_id
		WHERE A.lecture_id = #{lectureId}
		AND add_yn = 1
	</select>

	<select id="getLectureStudentRel" resultType="Integer">
		SELECT count(lecture_rel_id)
		FROM LECTURE_STUDENT_REL
		WHERE lecture_id = #{lectureId}
		AND student_id = #{studentId}
		AND add_yn = 1
	</select>

	<select id="getLectureStudentRelByStudentId" resultType="com.flowedu.dto.LectureStudentRelByIdDto">
		SELECT A.lecture_rel_id, A.lecture_id, A.add_yn, A.payment_yn, A.payment_date, A.payment_price, B.*, C.office_name, D.lecture_price_id, D.lecture_price
		FROM LECTURE_STUDENT_REL A LEFT JOIN LECTURE_INFO B
		ON A.lecture_id = B.lecture_id LEFT JOIN OFFICE C
		ON B.office_id = C.office_id LEFT JOIN LECTURE_PRICE D
		ON B.lecture_price_id = D.lecture_price_id
		WHERE A.student_id =  #{studentId}
		<if test="type == 'MONTH'">
			AND DATE_FORMAT(A.create_date, '%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}
		</if>
	</select>

	<select id="getLectureStudentRelByStudentIdCount" resultType="Integer">
		SELECT count(A.lecture_rel_id)
		FROM LECTURE_STUDENT_REL A LEFT JOIN LECTURE_INFO B
		ON A.lecture_id = B.lecture_id LEFT JOIN OFFICE C
		ON B.office_id = C.office_id LEFT JOIN LECTURE_PRICE D
		ON B.lecture_price_id = D.lecture_price_id
		WHERE A.student_id =  #{studentId}
		<if test="type == 'MONTH'">
			AND DATE_FORMAT(A.create_date, '%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}
		</if>
	</select>

	<select id="getLectureStudentRelInfo" resultType="com.flowedu.dto.LectureStudentRelByIdDto">
		SELECT A.lecture_rel_id, A.lecture_id, A.add_yn, A.payment_yn, A.payment_date, A.payment_price, B.*, C.office_name, D.lecture_price_id, D.lecture_price
		FROM LECTURE_STUDENT_REL A LEFT JOIN LECTURE_INFO B
		ON A.lecture_id = B.lecture_id LEFT JOIN OFFICE C
		ON B.office_id = C.office_id LEFT JOIN LECTURE_PRICE D
		ON B.lecture_price_id = D.lecture_price_id
		WHERE A.lecture_rel_id = #{lectureRelId}
	</select>

	<select id="getLectureAttendList" resultType="com.flowedu.dto.LectureAttendDto">
		SELECT Z.student_id, Z.student_name, ZZ.lecture_attend_id, ZZ.attend_type, ZZ.attend_date
		FROM (
				SELECT A.*, C.student_name
				FROM LECTURE_STUDENT_REL A LEFT JOIN LECTURE_DETAIL_INFO B
				ON A.lecture_id = B.lecture_id LEFT JOIN STUDENT C
				ON A.student_id = C.student_id
				WHERE A.lecture_id = #{lectureId}
				AND B.lecture_day = #{day}
		   	    AND A.add_yn = 1
		) Z LEFT OUTER JOIN LECTURE_ATTEND ZZ
		ON Z. student_id = ZZ.student_id
		AND ZZ.attend_day = #{day}
	</select>

    <select id="getLectureAttendListByStudentIdCount" resultType="Integer">
		SELECT count(A.lecture_attend_id) as cnt
		FROM LECTURE_ATTEND A LEFT JOIN LECTURE_INFO B
		ON A.lecture_id = B.lecture_id LEFT JOIN OFFICE C
		ON B.office_id = C.office_id
		WHERE A.student_id = #{studentId}
		AND A.attend_date BETWEEN #{startDate} AND #{endDate}
		<if test="officeId > 0">
			AND C.office_id = #{officeId}
		</if>
		<!--
        SELECT count(lecture_attend_id)
        FROM LECTURE_ATTEND
        WHERE student_id = #{studentId}
        AND DATE_FORMAT(attend_date, '%Y-%m') = #{searchMonth}
        -->
    </select>

	<select id="getLectureAttendListByStudentId" resultType="com.flowedu.dto.LectureAttendDto">
		SELECT A.lecture_attend_id, A.attend_date, A.attend_type, A.attend_start_time, A.attend_end_time, A.attend_modify_comment ,B.lecture_name
		FROM LECTURE_ATTEND A LEFT JOIN LECTURE_INFO B
		ON A.lecture_id = B.lecture_id LEFT JOIN OFFICE C
		ON B.office_id = C.office_id
		WHERE A.student_id = #{studentId}
		AND A.attend_date BETWEEN #{startDate} AND #{endDate}
		<if test="officeId > 0">
			AND C.office_id = #{officeId}
		</if>
		ORDER BY A.attend_date DESC, A.attend_start_time ASC
		LIMIT #{start}, #{end}
		<!--
		SELECT A.*, B.lecture_name
		FROM LECTURE_ATTEND A LEFT JOIN LECTURE_INFO B
		ON A.lecture_id = B.lecture_id
		WHERE A.student_id = #{studentId}
		AND DATE_FORMAT(A.attend_date, '%Y-%m') = #{searchMonth}
		-->
	</select>

	<select id="getLectureAttendListBySearch" resultType="com.flowedu.dto.LectureAttendDto">
		SELECT Z.student_id, Z.student_name, ZZ.lecture_attend_id, ZZ.attend_type, ZZ.attend_start_time, ZZ.attend_end_time, ZZ.attend_modify_comment
		FROM (
				SELECT A.*, C.student_name
				FROM LECTURE_STUDENT_REL A LEFT JOIN LECTURE_DETAIL_INFO B
				ON A.lecture_id = B.lecture_id LEFT JOIN STUDENT C
				ON A.student_id = C.student_id LEFT JOIN LECTURE_INFO D
				ON A.lecture_id = D.lecture_id
				WHERE A.lecture_id = #{lectureId}
				AND B.lecture_day = #{day}
				AND A.add_yn = true
                <if test="studentName != ''">
                    AND C.student_name LIKE CONCAT('%',#{studentName},'%')
                </if>
				<if test="searchDate != ''">
					<![CDATA[
						AND DATE(D.lecture_start_date) <= #{searchDate}
					]]>
					<![CDATA[
						AND DATE(D.lecture_end_date) >= #{searchDate}
					]]>
				</if>
		) Z LEFT OUTER JOIN LECTURE_ATTEND ZZ
		ON Z. student_id = ZZ.student_id
		AND ZZ.lecture_id = #{lectureId}
		AND ZZ.attend_day = #{day}
		AND ZZ.attend_date = #{today}
		ORDER BY Z.student_id ASC, ZZ.lecture_attend_id ASC
	</select>

	<select id="getLectureInfoMyClass" resultType="com.flowedu.dto.LectureInfoDto">
		SELECT * FROM LECTURE_INFO
		WHERE 1=1
		<if test="memberType eq 'TEACHER_MANAGE' || memberType eq 'TEACHER'">
			AND charge_member_id = #{flowMemberId}
			OR manage_member_id = #{flowMemberId}
		</if>
	</select>

    <select id="getAssignmentInfoList" resultType="com.flowedu.dto.AssignmentInfoDto">
        SELECT A.*, C.member_name
        FROM ASSIGNMENT_INFO A LEFT JOIN LECTURE_INFO B
        ON A.lecture_id = B.lecture_id LEFT JOIN FLOWEDU_MEMBER C
        ON A.reg_member_id = C.flow_member_id
        WHERE 1=1
		<if test="assignmentIdx > 0">
			AND A.assignment_idx = #{assignmentIdx}
		</if>
		<if test="assignmentIdx == 0">
			AND A.lecture_id = #{lectureId}
			<if test="useYn != null">
				AND A.use_yn = #{useYn}
			</if>
			<if test="startDate != ''">
				AND DATE(A.create_date) BETWEEN #{startDate} AND #{endDate}
			</if>
			<if test="memberName != ''">
				AND C.member_name LIKE CONCAT('%', #{memberName}, '%')
			</if>
		</if>
    </select>

	<select id="selectLecutreRoomRegSuccess" resultType="com.flowedu.dto.LectureRoomDto">
		SELECT A.lecture_room_id, A.lecture_room_name, A.room_limit_student,
		(
			SELECT count(lecture_detail_id) as cnt
			FROM LECTURE_DETAIL_INFO C LEFT JOIN LECTURE_INFO B
			ON C.lecture_id = B.lecture_id
			WHERE C.lecture_room_id = A.lecture_room_id
			AND DATE_FORMAT(now(), '%Y-%m-%d') BETWEEN B.lecture_start_date AND B.lecture_end_date
			AND lecture_day = #{lectureDay}
			<![CDATA[
			AND TIME_TO_SEC(TIME(start_time)) < TIME_TO_SEC(TIME(#{endTime}))
			]]>
			AND TIME_TO_SEC(TIME(end_time)) > TIME_TO_SEC(TIME(#{startTime}))
		) as cnt
		FROM LECTURE_ROOM_INFO A
		WHERE A.office_id = #{officeId}
		ORDER BY lecture_room_name ASC

	</select>

	<insert id="saveLectureRoom">
		INSERT INTO LECTURE_ROOM_INFO
		(office_id, lecture_room_name)
		VALUES
		(#{officeId}, #{lectureRoomName})
	</insert>

	<insert id="saveLecturePrice" parameterType="Integer">
		INSERT INTO LECTURE_PRICE (lecture_price)
		VALUES (#{lecturePrice})
	</insert>

	<insert id="saveLectureInfo" parameterType="com.flowedu.dto.LectureInfoDto">
		INSERT INTO LECTURE_INFO
		(
			office_id, charge_member_id, manage_member_id, lecture_price_id, lecture_name,
			lecture_subject, lecture_grade, lecture_level, lecture_operation_type,
			lecture_start_date, lecture_end_date, lecture_limit_student, lecture_status, school_type, academy_group_id
		)
		VALUES
		(
			#{officeId}, #{chargeMemberId}, #{manageMemberId}, #{lecturePriceId}, #{lectureName},
			#{lectureSubject}, #{lectureGrade}, #{lectureLevel}, #{lectureOperationType},
			#{lectureStartDate}, #{lectureEndDate}, #{lectureLimitStudent}, #{lectureStatus}, #{schoolType}, #{academyGroupId}
		)
		<selectKey resultType="Long" keyProperty="lectureId" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<insert id="saveLectureDetailList" parameterType="com.flowedu.dto.LectureDetailDto">
		INSERT INTO LECTURE_DETAIL_INFO
		(
			lecture_id, lecture_room_id, start_time, end_time, lecture_day
		)
		VALUES
		<foreach collection="lectureDeatilList" item="values" separator=",">
		( #{values.lectureId}, #{values.lectureRoomId}, #{values.startTime}, #{values.endTime}, #{values.lectureDay} )
		</foreach>
	</insert>

	<insert id="saveLectureDetail" parameterType="com.flowedu.dto.LectureDetailDto">
		INSERT INTO LECTURE_DETAIL_INFO
		(
		lecture_id, lecture_room_id, start_time, end_time, lecture_day
		)
		VALUES
		( #{lectureId}, #{lectureRoomId}, #{startTime}, #{endTime}, #{lectureDay} )

	</insert>

	<insert id="saveLectureStudentRel" parameterType="com.flowedu.dto.LectureStudentRelDto">
		INSERT INTO LECTURE_STUDENT_REL
		( lecture_id , student_id )
		VALUES
		<foreach collection="relList" item="values" separator=",">
		( #{values.lectureId}, #{values.studentId} )
		</foreach>
	</insert>

	<insert id="saveLectureAttend">
		INSERT INTO LECTURE_ATTEND
		(lecture_id, student_id, attend_day, attend_type, attend_date, attend_start_time)
		VALUES
		(#{lectureId}, #{studentId}, #{attendDay}, #{attendType}, date_format(curdate(), '%Y-%m-%d'), DATE_FORMAT(NOW(), '%H:%i'))
	</insert>

	<insert id="saveLectureAttendList" parameterType="com.flowedu.dto.LectureAttendDto">
		INSERT INTO LECTURE_ATTEND
		(lecture_id, student_id, attend_day, attend_type, attend_date, attend_start_time, attend_end_time, attend_modify_comment)
		VALUES
		<foreach collection="attendList" item="values" separator=",">
			(
				#{values.lectureId},
				#{values.studentId},
				#{values.attendDay},
				#{values.attendType},
				DATE_FORMAT(CURDATE(), '%Y-%m-%d'),
				#{values.attendStartTime},
				#{values.attendEndTime},
				#{values.attendModifyComment}
			)
		</foreach>
	</insert>

	<insert id="saveAssignmentInfo" parameterType="com.flowedu.dto.AssignmentInfoDto">
		INSERT INTO ASSIGNMENT_INFO
		(lecture_id, reg_member_id, assignment_subject, assignment_content, assignment_file_name, attachment_file_url, use_yn)
		VALUES
		(#{lectureId}, #{regMemberId}, #{assignmentSubject}, #{assignmentContent}, #{assignmentFileName}, #{attachmentFileUrl}, #{useYn})
	</insert>

	<update id="modifyLectureRoom">
		UPDATE LECTURE_ROOM_INFO
		<set>
			<if test="officeId != null or officeId > 0">office_id = #{officeId},</if>
			<if test="lectureRoomName != ''">lecture_room_name = #{lectureRoomName}</if>
		</set>
		WHERE lecture_room_id = #{lectureRoomId}
	</update>

	<update id="modifuLecturePrice">
		UPDATE LECTURE_PRICE
		<set>
			lecture_price = #{lecturePrice}
		</set>
		WHERE lecture_price_id = #{lecturePriceId}
	</update>

	<update id="modifyLectureInfo" parameterType="com.flowedu.dto.LectureInfoDto">
		UPDATE LECTURE_INFO
		<set>
			<if test="officeId > 0">office_id = #{officeId},</if>
			<if test="chargeMemberId > 0">charge_member_id = #{chargeMemberId},</if>
			<if test="manageMemberId > 0">manage_member_id = #{manageMemberId},</if>
			<if test="lecturePriceId > 0">lecture_price_id = #{lecturePriceId},</if>
			<if test="lectureName != ''">lecture_name = #{lectureName},</if>
			<if test="lectureSubject != ''">lecture_subject = #{lectureSubject},</if>
			<if test="lectureGrade > 0">lecture_grade = #{lectureGrade},</if>
			<if test="lectureLevel != ''">lecture_level = #{lectureLevel},</if>
			<if test="lectureOperationType != ''">lecture_operation_type = #{lectureOperationType},</if>
			<if test="lectureStartDate != ''">lecture_start_date = #{lectureStartDate},</if>
			<if test="lectureEndDate != ''">lecture_end_date = #{lectureEndDate},</if>
			<if test="lectureLimitStudent > 0">lecture_limit_student = #{lectureLimitStudent},</if>
			<if test="lectureStatus != ''">lecture_status = #{lectureStatus},</if>
            <if test="academyGroupId > 0">academy_group_id = #{academyGroupId},</if>
		</set>
		WHERE lecture_id = #{lectureId}
	</update>

	<update id="modifyLectureDetailInfo" parameterType="com.flowedu.dto.LectureDetailDto">
		UPDATE LECTURE_DETAIL_INFO
		<set>
			<if test="lectureId > 0">lecture_id = #{lectureId},</if>
			<if test="lectureRoomId > 0">lecture_room_id = #{lectureRoomId},</if>
			<if test="startTime != ''">start_time = #{startTime},</if>
			<if test="endTime != ''">end_time = #{endTime},</if>
			<if test="lectureDay != ''">lecture_day = #{lectureDay}</if>
		</set>
		WHERE lecture_detail_id = #{lectureDetailId}
	</update>

	<update id="modifyLecutreStatus">
		UPDATE LECTURE_INFO
		<set>
			<if test="lectureStatus != ''">lecture_status = #{lectureStatus}</if>
		</set>
		WHERE lecture_id = #{lectureId}
	</update>

	<update id="modifyLectureStudentRel">
		UPDATE LECTURE_STUDENT_REL
		<set>
			<if test="lectureId > 0">lecture_id = #{lectureId},</if>
			<if test="studentId > 0">student_id = #{studentId},</if>
			<if test="addYn != null">add_yn = #{addYn}</if>
		</set>
		WHERE lecture_rel_id = #{lectureRelId}
	</update>

	<update id="modifyAttendComment">
		UPDATE LECTURE_ATTEND
		<set>
			<if test="attendModifyComment != ''">attend_modify_comment = #{attendModifyComment},</if>
			<if test="attendType != ''">attend_type = #{attendType},</if>
			modify_date = now()
		</set>
		WHERE lecture_attend_id = #{lectureAttendId}
	</update>

	<update id="calcLecturePaymentPrice">
		UPDATE LECTURE_STUDENT_REL
		<set>
			<if test="calcType == 'PLUS'">payment_price = payment_price + #{paymentPrice}</if>
			<if test="calcType == 'MINUS'">payment_price = payment_price - #{paymentPrice}</if>
		</set>
		WHERE lecture_rel_id = #{lectureRelId}
	</update>

	<update id="updateLectureAttend" parameterType="com.flowedu.dto.LectureAttendDto">
		UPDATE LECTURE_ATTEND
		<set>
			<if test="attendType != ''">end_attend_type = #{attendType},</if>
			<if test="attendModifyComment != ''">attend_modify_comment = #{attendModifyComment},</if>
			<if test="attendEndTime != ''">attend_end_time = #{attendEndTime},</if>
		</set>
		WHERE lecture_attend_id = #{lectureAttendId}
	</update>

	<update id="modifyAssignmentInfo" parameterType="com.flowedu.dto.AssignmentInfoDto">
		UPDATE ASSIGNMENT_INFO
		<set>
			<if test="lectureId > 0">lecture_id = #{lectureId},</if>
			<if test="regMemberId > 0">reg_member_id = #{regMemberId},</if>
			<if test="assignmentSubject != ''">assignment_subject = #{assignmentSubject},</if>
			<if test="assignmentContent != ''">assignment_content = #{assignmentContent},</if>
			<if test="assignmentFileName != ''">assignment_file_name = #{assignmentFileName},</if>
			<if test="attachmentFileUrl != ''">attachment_file_url = #{attachmentFileUrl},</if>
			use_yn = #{useYn}
		</set>
		WHERE assignment_idx = #{assignmentIdx}
	</update>

	<delete id="deleteLectureDetailInfo">
		DELETE FROM LECTURE_DETAIL_INFO WHERE lecture_id = #{lectureId}
	</delete>

</mapper>