<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.flowedu.mapper.StudentMapper">

	<select id="getStudentInfo" resultType="com.flowedu.dto.StudentDto">
		SELECT * FROM STUDENT
		WHERE student_id = #{studentId}
	</select>

	<select id="getSudentListCount" resultType="Integer">
		SELECT count(student_id) FROM STUDENT
		WHERE 1=1
		<if test="gubun != ''">
			AND school_type = #{gubun}
		</if>
		<if test="studentName != ''">
			AND student_name LIKE CONCAT (#{studentName}, '%')
		</if>
	</select>

	<select id="getSudentList" resultType="com.flowedu.dto.StudentDto">
		SELECT * FROM STUDENT
		WHERE 1=1
		<if test="gubun != ''">
			AND school_type = #{gubun}
		</if>
		<if test="studentName != ''">
			AND student_name LIKE CONCAT (#{studentName}, '%')
		</if>
		LIMIT #{start}, #{end}
	</select>

	<select id="getStudentMemoListCount" resultType="Integer">
		SELECT count(A.student_memo_id)
		FROM STUDENT_MEMO A LEFT JOIN FLOWEDU_MEMBER B
		ON A.flow_member_id = B.flow_member_id
		WHERE 1=1
		<if test="studentId >0">
			AND A.student_id = #{studentId}
		</if>
		<if test="searchDate != ''">
			AND DATE_FORMAT(A.create_date, '%Y-%m-%d') = #{searchDate}
		</if>
		<if test="memoType != ''">
			AND A.memo_type = #{memoType}
		</if>
		<if test="memberName != ''">
			AND B.member_name LIKE CONCAT ('%', #{memberName}, '%')
		</if>
		<if test="memoContent != ''">
			AND A.memo_content LIKE CONCAT ('%', #{memoContent}, '%') OR A.memo_title LIKE CONCAT ('%', #{memoContent}, '%')
		</if>
		<if test="processYn != null">
			AND A.process_yn = #{processYn}
		</if>
	</select>

	<select id="getStudentMemoList" resultType="com.flowedu.dto.StudentMemoDto">
		SELECT A.*, B.member_name,
		(SELECT count(student_memo_id) FROM STUDENT_MEMO_REPLY WHERE student_memo_id = A.student_memo_id AND delete_yn = 0) as reply_count
		FROM STUDENT_MEMO A LEFT JOIN FLOWEDU_MEMBER B
		ON A.flow_member_id = B.flow_member_id
		WHERE 1=1
		<if test="studentId > 0">
			AND student_id = #{studentId}
		</if>
		<if test="searchDate != ''">
			AND DATE_FORMAT(A.create_date, '%Y-%m-%d') = #{searchDate}
		</if>
		<if test="memoType != ''">
			AND A.memo_type = #{memoType}
		</if>
		<if test="memberName != ''">
			AND B.member_name LIKE CONCAT ('%', #{memberName}, '%')
		</if>
		<if test="memoContent != ''">
			AND A.memo_content LIKE CONCAT ('%', #{memoContent}, '%') OR A.memo_title LIKE CONCAT ('%', #{memoContent}, '%')
		</if>
		<if test="processYn != null">
			AND A.process_yn = #{processYn}
		</if>
		ORDER BY A.create_date DESC
		LIMIT #{start}, #{end}
	</select>

	<select id="getStudentMemoReplyList" resultType="com.flowedu.dto.StudentMemoReplyDto">
		SELECT A.*, B.member_name
		FROM STUDENT_MEMO_REPLY A LEFT JOIN FLOWEDU_MEMBER B
		ON A.flow_member_id = B.flow_member_id
		WHERE 1=1
		<if test="studentMemoId > 0">
			AND student_memo_id = #{studentMemoId}
		</if>
		AND delete_yn = 0
		LIMIT #{start}, #{end}
	</select>

	<select id="getStudentMemoByStudentMemoId" resultType="com.flowedu.dto.StudentMemoDto">
		SELECT A.*, B.member_name
		FROM STUDENT_MEMO A LEFT JOIN FLOWEDU_MEMBER B
		ON A.flow_member_id = B.flow_member_id
		WHERE 1=1
		<if test="studentMemoId > 0">
			AND A.student_memo_id = #{studentMemoId}
		</if>
	</select>

	<select id="getStudentByPhoneNumber" resultType="Integer">
		SELECT count(student_id)
		FROM STUDENT
		WHERE student_phone_number IN (#{phoneNumber})
		OR mother_phone_number IN (#{phoneNumber})
		OR father_phone_number IN (#{phoneNumber})
		OR etc_phone_number IN (#{phoneNumber})
	</select>

	<select id="selectStudentListByLectureRegSearch" resultType="com.flowedu.dto.StudentDto">
		SELECT * FROM STUDENT
		WHERE 1=1
		<if test="schoolType != ''">
			AND	school_type = #{schoolType}
		</if>
		<if test="searchValue != ''">
			<if test="searchType eq 'STUDENT_NAME'">
				 AND student_name LIKE CONCAT ('%', #{searchValue}, '%')
			</if>
			<if test="searchType eq 'PHONE_NUMBER'">
				AND student_phone_number LIKE CONCAT ('%', #{searchValue}, '%')
			</if>
			<if test="searchType eq 'MOTHER_NAME'">
				AND mother_name LIKE CONCAT ('%', #{searchValue}, '%')
			</if>
			<if test="searchType eq 'MOTHER_PHONE_NUMBER'">
				AND mother_phone_number LIKE CONCAT ('%', #{searchValue}, '%')
			</if>
		</if>
        LIMIT #{start}, #{end}
	</select>

    <select id="selectStudentListByLectureRegSearchCount" resultType="Integer">
        SELECT count(student_id) FROM STUDENT
        WHERE 1=1
        <if test="schoolType != ''">
            AND	school_type = #{schoolType}
        </if>
        <if test="searchValue != ''">
            <if test="searchType eq 'STUDENT_NAME'">
                AND student_name LIKE CONCAT ('%', #{searchValue}, '%')
            </if>
            <if test="searchType eq 'PHONE_NUMBER'">
                AND student_phone_number LIKE CONCAT ('%', #{searchValue}, '%')
            </if>
            <if test="searchType eq 'MOTHER_NAME'">
                AND mother_name LIKE CONCAT ('%', #{searchValue}, '%')
            </if>
            <if test="searchType eq 'MOTHER_PHONE_NUMBER'">
                AND mother_phone_number LIKE CONCAT ('%', #{searchValue}, '%')
            </if>
        </if>
    </select>

	<select id="motherPhoneNumberCount" resultType="Integer">
		SELECT count(student_id) FROM STUDENT WHERE mother_phone_number = #{motherPhoneNumber}
	</select>

	<select id="test1" resultType="Long">
		SELECT idx FROM sooa_ucc WHERE media_key = #{mediaKey}
	</select>

	<update id="test2">
		UPDATE sooa_ucc SET
		thumbnail_file = #{t},
		media_file = #{m},
		server_type = 'IBM'
		WHERE media_key = #{mediaKey}
	</update>

	<insert id="saveStudentInfo" parameterType="com.flowedu.dto.StudentDto">
		INSERT INTO STUDENT
		(
			student_name, student_password, student_gender, student_birthday, home_tel_number,
			student_phone_number, student_email, school_name, school_type, student_grade,
			student_photo_file, student_photo_url, student_memo, mother_name,
			mother_phone_number, father_name, father_phone_number, parent_password,
			etc_name, etc_phone_number, student_auth_key
		)
		VALUES
		(
			#{studentName}, #{studentPassword}, #{studentGender}, #{studentBirthday}, #{homeTelNumber},
			#{studentPhoneNumber}, #{studentEmail}, #{schoolName}, #{schoolType}, #{studentGrade},
			#{studentPhotoFile}, #{studentPhotoUrl}, #{studentMemo}, #{motherName},
			#{motherPhoneNumber}, #{fatherName}, #{fatherPhoneNumber}, #{parentPassword},
			#{etcName}, #{etcPhoneNumber}, #{studentAuthKey}
		)
	</insert>

	<insert id="saveStudentInfoList" parameterType="list">
		INSERT INTO STUDENT
		(
		student_name, student_password, student_gender, student_birthday, home_tel_number,
		student_phone_number, student_email, school_name, school_type, student_grade,
		student_photo_file, student_photo_url, student_memo, mother_name,
		mother_phone_number, father_name, father_phone_number, parent_password,
		etc_name, etc_phone_number, student_auth_key
		)
		VALUES
		<foreach collection="studentList" item="value" separator=",">
			(
			#{value.studentName}, #{value.studentPassword}, #{value.studentGender}, #{value.studentBirthday}, #{value.homeTelNumber},
			#{value.studentPhoneNumber}, #{value.studentEmail}, #{value.schoolName}, #{value.schoolType}, #{value.studentGrade},
			#{value.studentPhotoFile}, #{value.studentPhotoUrl}, #{value.studentMemo}, #{value.motherName},
			#{value.motherPhoneNumber}, #{value.fatherName}, #{value.fatherPhoneNumber}, #{value.parentPassword},
			#{value.etcName}, #{value.etcPhoneNumber}, #{value.studentAuthKey}
			)
		</foreach>
	</insert>

	<insert id="saveStudentMemo">
		INSERT INTO STUDENT_MEMO
		( student_id, flow_member_id, memo_content, memo_type, memo_title )
		VALUES
		( #{studentId}, #{flowMemberId}, #{memoContent}, #{memoType}, #{memoTitle} )
	</insert>

	<insert id="saveStudentMemoReply">
		INSERT INTO STUDENT_MEMO_REPLY
		(student_memo_id, flow_member_id, reply_content)
		VALUES
		(#{studentMemoId}, #{flowMemberId}, #{replyContent})
	</insert>

	<update id="modifyStudentInfo" parameterType="com.flowedu.dto.StudentDto">
		UPDATE STUDENT
		<set>
			<if test="studentName != ''">student_name = #{studentName},</if>
			<if test="studentPassword != ''">student_password = #{studentPassword},</if>
			<if test="studentGender != ''">student_gender = #{studentGender},</if>
			<if test="studentBirthday != ''">student_birthday = #{studentBirthday},</if>
			<if test="homeTelNumber != ''">home_tel_number = #{homeTelNumber},</if>
			<if test="studentPhoneNumber != ''">student_phone_number = #{studentPhoneNumber},</if>
			<if test="studentEmail != ''">student_email = #{studentEmail},</if>
			<if test="schoolName != ''">school_name = #{schoolName},</if>
			<if test="schoolType != ''">school_type = #{schoolType},</if>
			<if test="studentGrade != ''">student_grade = #{studentGrade},</if>
			<if test="studentPhotoFile != ''">student_photo_file = #{studentPhotoFile},</if>
			<if test="studentPhotoUrl != ''">student_photo_url = #{studentPhotoUrl},</if>
			<if test="studentMemo != ''">student_memo = #{studentMemo},</if>
			<if test="motherName != ''">mother_name = #{motherName},</if>
			<if test="motherPhoneNumber != ''">mother_phone_number = #{motherPhoneNumber},</if>
			<if test="fatherName != ''">father_name = #{fatherName},</if>
			<if test="fatherPhoneNumber != ''">father_phone_number = #{fatherPhoneNumber},</if>
			<if test="etcName != ''">etc_name = #{etcName},</if>
			<if test="etcPhoneNumber != ''">etc_phone_number = #{etcPhoneNumber},</if>
		</set>
		<where>
			student_id = #{studentId}
		</where>
	</update>

	<update id="modifyMemoProcessYn">
		UPDATE STUDENT_MEMO
		SET process_yn = #{processYn}
		WHERE student_memo_id = #{studentMemoId}
	</update>

	<update id="modifyStudentMemoReply">
		UPDATE STUDENT_MEMO_REPLY
		<set>
			<if test="replyContent != ''">reply_content = #{replyContent},</if>
			<if test="replyContent != ''">delete_yn = #{deleteYn}</if>
		</set>
		WHERE student_memo_reply_id = #{studentMemoReplyId}
	</update>

</mapper>